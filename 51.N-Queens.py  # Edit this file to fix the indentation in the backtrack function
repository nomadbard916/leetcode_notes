def solveNQueens(n):
    def backtrack(row, columns, diagonals1, diagonals2):
        if row == n:
            result.append(board[:])
            return
        for col in range(n):
            if col in columns or (row - col) in diagonals1 or (row + col) in diagonals2:
                continue
            columns.add(col)
            diagonals1.add(row - col)
            diagonals2.add(row + col)
            board[row] = col
            backtrack(row + 1, columns, diagonals1, diagonals2)
            columns.remove(col)
            diagonals1.remove(row - col)
            diagonals2.remove(row + col)

    result = []
    board = [-1] * n
    backtrack(0, set(), set(), set())
    return result